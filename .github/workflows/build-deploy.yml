name: Deploy Application
on:
  push:
    branches:
      - main # Trigger deployment on push to main

jobs:
  deploy:
    name: Deploy App
    runs-on: ubuntu-latest

    env:
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      SPRING_AI_OPENAI_API_KEY: ${{ secrets.SPRING_AI_OPENAI_API_KEY }}
      APP_USER: ${{ secrets.APP_USER }}
      APP_PASSWORD: ${{ secrets.APP_PASSWORD }}
      VAADIN_PRODUCTION_MODE: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java 24
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '24'
          cache: 'maven'

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Image Name Variables
        run: |
          echo "IMAGE_OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
          echo "IMAGE_REPO=$(echo ${{ github.event.repository.name }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
          echo "IMAGE_SHA_TAG=${{ github.sha }}" >> $GITHUB_ENV

      - name: Define Image ID
        run: |
          echo "IMAGE_ID=ghcr.io/${{ env.IMAGE_OWNER }}/${{ env.IMAGE_REPO }}" >> $GITHUB_ENV

      - name: Define Tagged Image ID
        run: |
          echo "IMAGE_ID_WITH_SHA=${{ env.IMAGE_ID }}:${{ env.IMAGE_SHA_TAG }}" >> $GITHUB_ENV
          echo "IMAGE_ID_LATEST=${{ env.IMAGE_ID }}:latest" >> $GITHUB_ENV

      - name: Build and Push Native Docker Image
        run: |
          ./mvnw -Pnative -B \
          -DskipTests \
          spring-boot:build-image

          docker tag "${{ env.IMAGE_ID_LATEST }}" "${{ env.IMAGE_ID_WITH_SHA }}"
          docker push "${{ env.IMAGE_ID_WITH_SHA }}"

      - name: Set up Fly CLI
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy to Fly.io
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: flyctl deploy --app bootiful-audio --image "${{ env.IMAGE_ID_WITH_SHA }}"
